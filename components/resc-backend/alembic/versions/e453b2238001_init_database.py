"""init database

Revision ID: e453b2238001
Revises: 
Create Date: 2022-09-23 08:44:32.699043

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e453b2238001'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('rule_allow_list',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=400), nullable=False),
    sa.Column('regexes', sa.String(length=400), nullable=True),
    sa.Column('paths', sa.String(length=400), nullable=True),
    sa.Column('commits', sa.String(length=400), nullable=True),
    sa.Column('stop_words', sa.String(length=400), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vcs_instance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('provider_type', sa.Enum('BITBUCKET', 'AZURE_DEVOPS', 'GITHUB_PUBLIC', name='provider_type'), nullable=True),
    sa.Column('scheme', sa.String(length=50), nullable=False),
    sa.Column('hostname', sa.String(length=200), nullable=False),
    sa.Column('port', sa.Integer(), nullable=False),
    sa.Column('organization', sa.String(length=200), nullable=True),
    sa.Column('vcs_scope', sa.Text(), nullable=True),
    sa.Column('exceptions', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('provider_type', 'scheme', 'hostname', 'port', 'organization', name='unique_vcs_instance')
    )
    op.create_table('repository_info',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vcs_instance', sa.Integer(), nullable=False),
    sa.Column('project_key', sa.String(length=100), nullable=False),
    sa.Column('repository_id', sa.String(length=100), nullable=False),
    sa.Column('repository_name', sa.String(length=100), nullable=False),
    sa.Column('repository_url', sa.String(length=200), nullable=False),
    sa.ForeignKeyConstraint(['vcs_instance'], ['vcs_instance.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('project_key', 'repository_id', 'vcs_instance', name='unique_repository_id_per_project')
    )
    op.create_table('rule_pack',
    sa.Column('version', sa.String(length=100), nullable=False),
    sa.Column('global_allow_list', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['global_allow_list'], ['rule_allow_list.id'], ),
    sa.PrimaryKeyConstraint('version')
    )
    op.create_table('branch_info',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('repository_info_id', sa.Integer(), nullable=False),
    sa.Column('branch_id', sa.String(length=200), nullable=False),
    sa.Column('branch_name', sa.String(length=200), nullable=False),
    sa.Column('last_scanned_commit', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['repository_info_id'], ['repository_info.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('branch_id', 'repository_info_id', name='unique_branch_id_per_repository')
    )
    op.create_table('rules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rule_pack', sa.String(length=100), nullable=False),
    sa.Column('allow_list', sa.Integer(), nullable=True),
    sa.Column('rule_name', sa.String(length=400), nullable=False),
    sa.Column('description', sa.String(length=400), nullable=False),
    sa.Column('tags', sa.String(length=400), nullable=True),
    sa.Column('entropy', sa.Float(), nullable=True),
    sa.Column('secret_group', sa.Integer(), nullable=True),
    sa.Column('regex', sa.String(length=1000), nullable=True),
    sa.Column('path', sa.String(length=1000), nullable=True),
    sa.Column('keywords', sa.String(length=400), nullable=True),
    sa.ForeignKeyConstraint(['allow_list'], ['rule_allow_list.id'], ),
    sa.ForeignKeyConstraint(['rule_pack'], ['rule_pack.version'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('rule_name', 'rule_pack', name='unique_rule_name_per_rule_pack_version')
    )
    op.create_table('finding',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('branch_info_id', sa.Integer(), nullable=False),
    sa.Column('rule_name', sa.String(length=400), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('line_number', sa.Integer(), nullable=False),
    sa.Column('commit_id', sa.String(length=120), nullable=True),
    sa.Column('commit_message', sa.Text(), nullable=True),
    sa.Column('commit_timestamp', sa.DateTime(), nullable=True),
    sa.Column('author', sa.String(length=200), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('status', sa.Enum('NOT_ANALYZED', 'UNDER_REVIEW', 'CLARIFICATION_REQUIRED', 'FALSE_POSITIVE', 'TRUE_POSITIVE', name='findingstatus'), server_default='NOT_ANALYZED', nullable=False),
    sa.Column('comment', sa.String(length=255), nullable=True),
    sa.Column('event_sent_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['branch_info_id'], ['branch_info.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('commit_id', 'branch_info_id', 'rule_name', 'file_path', 'line_number', name='uc_finding_per_branch')
    )
    op.create_table('scan',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('branch_info_id', sa.Integer(), nullable=True),
    sa.Column('rule_pack', sa.String(length=100), nullable=False),
    sa.Column('scan_type', sa.Enum('BASE', 'INCREMENTAL', name='scantype'), server_default='BASE', nullable=False),
    sa.Column('last_scanned_commit', sa.String(length=100), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('increment_number', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.ForeignKeyConstraint(['branch_info_id'], ['branch_info.id'], ),
    sa.ForeignKeyConstraint(['rule_pack'], ['rule_pack.version'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scan_finding',
    sa.Column('finding_id', sa.Integer(), nullable=False),
    sa.Column('scan_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['finding_id'], ['finding.id'], ),
    sa.ForeignKeyConstraint(['scan_id'], ['scan.id'], ),
    sa.PrimaryKeyConstraint('finding_id', 'scan_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('scan_finding')
    op.drop_table('scan')
    op.drop_table('finding')
    op.drop_table('rules')
    op.drop_table('branch_info')
    op.drop_table('rule_pack')
    op.drop_table('repository_info')
    op.drop_table('vcs_instance')
    op.drop_table('rule_allow_list')
    # ### end Alembic commands ###
