global:
  # Authentication is disabled by default, to enable it set authenticationEnabled to true and provide correct values for ssoConfig attributes
  rulePackVersion: "1.0.0" # Default rule pack version set to 1.0.0, increment the version for any rule pack change
  authenticationEnabled: "false"
  enableInClusterRabbitMqMgmt: "true"
  resc:
    image:
      repository: rescabnamro/
      name: resc-backend
      tag: latest
  rescFrontend:
    image:
      repository: rescabnamro/
      name: resc-frontend
      tag: latest
  VCSScraper:
    image:
      repository: rescabnamro/
      name: resc-vcs-scraper
      tag: latest
  rescSecretScanner:
    image:
      repository: rescabnamro/
      name: resc-vcs-scanner
      tag: latest

resc-vcs-scraper-projects:
  config:
    schedule: "0 6 * * 6"
    successfulJobsHistoryLimit: 1
    failedJobsHistoryLimit: 1

resc-vcs-scanner-secrets:
  config:
    force_base_scan: "false" # force_base_scan is set to false in order to enable incremental scanning of commits. If set to true, all commits will be scanned each time.
  resources:
    requests:
      cpu: 300m
      memory: 300M
    limits:
      cpu: 750m
      memory: 750M

resc-frontend:
  enableIngress: "false"
  exposeToHostPort: 30000
  rescWebServiceUrl: "http://localhost:30800/resc"
  # To configure single sign on provide below values for ssoConfig attributes
  # These attributes will be used in the RESC frontend
  ssoConfig:
    redirectUri: "<enter redirect uri here>" # optional
    idTokenIssuerUrl: "<enter ID token issuer url here>" # optional
    authorizationUrl: "<enter authorization url here>" # optional
    tokenEndPointUrl: "<enter token end point here>" # optional
    idTokenJwksUrl: "<enter ID token JWKS url here>" # optional
    accessTokenJwksUrl: "<enter Access token url here>" # optional

resc-web-service:
  exposeToHostPort: 30800
  resc:
    config:
      dbConnectionString: "mssql+pyodbc://{MSSQL_USERNAME}:{MSSQL_PASSWORD}@{MSSQL_DB_HOST}:{MSSQL_DB_PORT}/{MSSQL_SCHEMA}?driver={MSSQL_ODBC_DRIVER}&Encrypt=yes&TrustServerCertificate=yes"
      dbSchema: "master" # <enter database schema name here, default to master>
      dbUser: "sa" # <enter database username here, default to sa>
      dbPass: "Y0urStr0ngPassword" # <enter database password here, default to Y0urStr0ngPassword>
    # To configure single sign on provide below values for ssoConfig attributes
    # These attributes will be used in the RESC API to validate access token
    ssoConfig:
      ssoAccessTokenIssuerUrl: "<enter Access token issuer url here>" # optional
      ssoAccessTokenJwksUrl: "<enter Access token JWKS url here>" # optional
    corsAllowedDomains: "http://localhost:8080, http://localhost:30000"
    authRequired: "false"

resc-web-service-no-auth:
  exposeToHostPort: 30900
  resc:
    config:
      dbSchema: "master" # <enter database schema name here, default to master>
      dbUser: "sa" # <enter database username here, default to sa>
      dbPass: "Y0urStr0ngPassword" # <enter database password here, default to Y0urStr0ngPassword>

resc-database:
  hostOS: "windows" # possible values windows/linux
  database:
    exposeToHostPort: 30880
    pvc_path: "/run/desktop/mnt/host/c/Users/<username>/resc/database" # "<enter path to store database data>" # Linux: /Users/<username>/var/resc/database, Windows: # /run/desktop/mnt/host/c/Users/<username>/resc/database
    config:
      password: "Y0urStr0ngPassword" # <enter database system admin password here, default to Y0urStr0ngPassword>

resc-database-init:
  resc:
    config:
      dbConnectionString: "mssql+pyodbc://{MSSQL_USERNAME}:{MSSQL_PASSWORD}@{MSSQL_DB_HOST}:{MSSQL_DB_PORT}/{MSSQL_SCHEMA}?driver={MSSQL_ODBC_DRIVER}&Encrypt=yes&TrustServerCertificate=yes"
      dbSchema: "master" # <enter database schema name here, default to master>
      dbUser: "sa" # <enter database username here, default to sa>
      dbPass: "Y0urStr0ngPassword" # <enter database password here, default to Y0urStr0ngPassword>

resc-rabbitmq:
  rabbitMQ:
    exposeToHostPort: 30901
    exposeAmqpToHostPort: 30902
    config:
      admin_username: "admin" # <enter rabbitmq admin username, default to admin>
      admin_password: "Y0urStr0ngPassword" # <enter rabbitmq admin password, default to Y0urStr0ngPassword>
      queues_username: "queue_user" # <enter queue username, default to queue_user>
      queues_password: "Y0urStr0ngPassword" # <enter queue password, default to Y0urStr0ngPassword>
    pvc_path: "/run/desktop/mnt/host/c/Users/<username>/resc/rabbitmq" # "<enter path to store rabbitmq data>" # Linux: /Users/<username>/var/resc/rabbitmq, Windows: # /run/desktop/mnt/host/c/Users/<username>/resc/rabbitmq
  filemountType: "windows" # possible values windows/linux/azure

resc-vcs-instances:
  vcsInstances:
    ### Github ###
    - name: "GITHUB_PUBLIC"
      scope: ["kubernetes", "docker"] # Enter comma separated list of github accounts to scan, For example: ["kubernetes", "docker"] for https://github.com/kubernetes and https://github.com/docker
      exceptions: [] # Enter comma separated list of github accounts to exclude from scan
      providerType: "GITHUB_PUBLIC"
      hostname: "github.com"
      port: "443"
      scheme: "https"
      username: "GITHUB_PUBLIC_USERNAME"
      usernameValue: "<enter your github username here>"
      organization: ""
      token: "GITHUB_PUBLIC_TOKEN"
      tokenValue: "<enter your github personal access token here>"

    ### AzureDevOps ###
    # - name: "AzureDevOps"
    #   scope: []
    #   exceptions: []
    #   providerType: "AZURE_DEVOPS"
    #   hostname: "<enter azuredevops host name here>" # Example - dev.azure.com
    #   port: "443"
    #   scheme: "https"
    #   username: "AZURE_DEVOPS_USERNAME"
    #   usernameValue: "NA"
    #   organization: "<enter azuredevopsorganization name here>"
    #   token: "AZURE_DEVOPS_TOKEN"
    #   tokenValue: "<enter azuredevops personal access token here>"

    ### Bitbucket ###
    # - name: "BITBUCKET"
    #   scope: []
    #   exceptions: []
    #   providerType: "BITBUCKET"
    #   hostname: "<enter bitbucket host name here>"
    #   port: "<enter bitbucket port number here>"
    #   scheme: "https"
    #   organization: ""
    #   username: "BITBUCKET_USERNAME"
    #   usernameValue: "<enter bitbucket username here>"
    #   token: "BITBUCKET_TOKEN"
    #   tokenValue: "<enter bitbucket personal access token here>"