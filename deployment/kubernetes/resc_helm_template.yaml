---
# Source: resc/charts/resc-database-init/templates/database_secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: resc-database-init-secret
  namespace: resc
  labels:
    app: resc
data:
  
  DB_CONNECTION_STRING: "bXNzcWwrcHlvZGJjOi8ve01TU1FMX1VTRVJOQU1FfTp7TVNTUUxfUEFTU1dPUkR9QHtNU1NRTF9EQl9IT1NUfTp7TVNTUUxfREJfUE9SVH0ve01TU1FMX1NDSEVNQX0/ZHJpdmVyPXtNU1NRTF9PREJDX0RSSVZFUn0mRW5jcnlwdD15ZXMmVHJ1c3RTZXJ2ZXJDZXJ0aWZpY2F0ZT15ZXM="
  
  
  MSSQL_PASSWORD: "SDNsbDBXMHJsZEAyMDIz"
---
# Source: resc/charts/resc-database/templates/database_secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: resc-database-secret
  namespace: resc
  labels:
    app: resc
data:
  
  
  SA_PASSWORD: "SDNsbDBXMHJsZEAyMDIz"
---
# Source: resc/charts/resc-rabbitmq/templates/rabbitmq_admin_secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: resc-rabbitmq-admin-secret
  namespace: resc
  labels:
    app: resc
data:
  
  RABBITMQ_DEFAULT_USER: "YWRtaW4="
  
  
  RABBITMQ_DEFAULT_PASS: "WTB1clN0cjBuZ1Bhc3N3b3Jk"
---
# Source: resc/charts/resc-rabbitmq/templates/rabbitmq_user_secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: resc-rabbitmq-user-secret
  namespace: resc
  labels:
    app: resc
data:
  
  RABBITMQ_QUEUES_USERNAME: "cXVldWVfdXNlcg=="
  
  
  RABBITMQ_QUEUES_PASSWORD: "WTB1clN0cjBuZ1Bhc3N3b3Jk"
  
  
  RABBITMQ_USERNAME: "cXVldWVfdXNlcg=="
  
  
  RABBITMQ_PASSWORD: "WTB1clN0cjBuZ1Bhc3N3b3Jk"
---
# Source: resc/charts/resc-redis/templates/redis_secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: resc-redis-secret
  namespace: resc
  labels:
    app: resc
type: Opaque
data:
  
  REDIS_PASSWORD: aGVsbG93b3JsZA==
---
# Source: resc/charts/resc-vcs-instances/templates/vcs_instances_secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: resc-vcs-instances-secret
  namespace: resc
  labels:
    app: resc
data:
  
  AZURE_DEVOPS_USERNAME: "TkE="
  
  
  AZURE_DEVOPS_TOKEN: "aDJzbjVsYjRqdHFqa3ZteG82YW1jbG13cnJqeXRjMzU3cW1ycmtseW90czV4M3dneHR0YQ=="
---
# Source: resc/charts/resc-web-service/templates/web_service_secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: resc-web-service-secret
  namespace: resc
  labels:
    app: resc
data:
  
  DB_CONNECTION_STRING: "bXNzcWwrcHlvZGJjOi8ve01TU1FMX1VTRVJOQU1FfTp7TVNTUUxfUEFTU1dPUkR9QHtNU1NRTF9EQl9IT1NUfTp7TVNTUUxfREJfUE9SVH0ve01TU1FMX1NDSEVNQX0/ZHJpdmVyPXtNU1NRTF9PREJDX0RSSVZFUn0mRW5jcnlwdD15ZXMmVHJ1c3RTZXJ2ZXJDZXJ0aWZpY2F0ZT15ZXM="
  
  
  MSSQL_PASSWORD: "SDNsbDBXMHJsZEAyMDIz"
  
  
  REDIS_PASSWORD: "aGVsbG93b3JsZA=="
---
# Source: resc/charts/resc-database-init/templates/database_configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: resc-database-init-config
  namespace: resc
  labels:
    app: resc
data:
  
  MSSQL_SCHEMA: master
  
  
  MSSQL_DB_PORT: "1433"
  
  
  MSSQL_USERNAME: sa
  
  
  MSSQL_ODBC_DRIVER: ODBC Driver 18 for SQL Server
  
  
  
  MSSQL_DSN: rescdb
  
  odbc.ini: |
    [rescdb]
    Driver = ODBC Driver 18 for SQL Server
    Server = tcp:,1433
    Authentication = ActiveDirectoryMsi
---
# Source: resc/charts/resc-database/templates/database_configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: resc-database-config
  namespace: resc
  labels:
    app: resc
data:
  ACCEPT_EULA: "Y"
---
# Source: resc/charts/resc-frontend/templates/frontend_configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: resc-frontend-config
  namespace: resc
  labels:
    app: resc
data:
  
  VUE_APP_AUTHENTICATION_REQUIRED: "false"
  
  
  VUE_APP_RESC_WEB_SERVICE_URL: http://localhost:30800/resc
  
  
  VUE_APP_SSO_REDIRECT_URI: http://localhost:30000/callback
  
  
  VUE_APP_SSO_ID_TOKEN_ISSUER_URL: https://security-ifs-test.connect.abnamro.com:9031
  
  
  VUE_APP_SSO_AUTHORIZATION_URL: https://security-ifs-test.connect.abnamro.com:9031/as/authorization.oauth2
  
  
  VUE_APP_SSO_TOKEN_ENDPOINT_URL: https://security-ifs-test.connect.abnamro.com:9031/as/token.oauth2
  
  
  VUE_APP_SSO_ID_TOKEN_JWKS_URL: https://security-ifs-test.connect.abnamro.com:9031/pf/JWKS
  
  
  VUE_APP_SSO_ACCESS_TOKEN_JWKS_URL: https://security-ifs-test.connect.abnamro.com:9031/ext/employeeoidc/jwks
  
  
  
  
  VUE_APP_SSO_LOGIN_PAGE_MESSAGE: Please use the Login button
---
# Source: resc/charts/resc-rabbitmq/templates/rabbitmq_configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: resc-rabbitmq-config
  namespace: resc
  labels:
    app: resc
data:
  
  RABBITMQ_DEFAULT_VHOST: "resc-rabbitmq"
  
  rabbitmq.conf: |
    consumer_timeout = 7200000
---
# Source: resc/charts/resc-redis/templates/redis_configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: resc-redis-config
  namespace: resc
  labels:
    app: resc
data:
  redis-config: |
    maxmemory 6gb
    maxmemory-policy allkeys-lru 
    protected-mode yes
---
# Source: resc/charts/resc-rules-init/templates/rules_configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: resc-rules-config
  namespace: resc
  labels:
    app: resc
data:
  
  RULE_PACK_VERSION: 1.0.3
  
  
  RESC-SECRETS-RULE.toml:
    
---
# Source: resc/charts/resc-vcs-instances/templates/vcs_instances_configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: resc-vcs-instances-config
  namespace: resc
  labels:
    app: resc
data:
  vcs_instances_config.json: |
    {
      
      "AzureDevOps": {
        "name": "AzureDevOps",
        "exceptions": [],
        "provider_type": "AZURE_DEVOPS",
        "hostname": "dev.azure.com",
        "port": "443",
        "scheme": "https",
        "username": "AZURE_DEVOPS_USERNAME",
        "token": "AZURE_DEVOPS_TOKEN",
        "scope": ["GRD0001045"],
        "organization": "cbsp-abnamro"
      }
    }
---
# Source: resc/charts/resc-vcs-scanner-secrets/templates/vcs_scanner_secrets_configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: resc-vcs-scanner-secrets-config
  namespace: resc
  labels:
    app: resc
data:
  
  RABBITMQ_QUEUE: "repositories"
  
  
  FORCE_BASE_SCAN: "false"
  
  
  GITLEAKS_PATH: /vcs_scanner/gitleaks_config/seco-gitleaks-linux-amd64
  
  
  DEBUG_MODE: "0"
  
  
  VCS_INSTANCES_FILE_PATH: "/tmp/vcs_instances_config.json"
---
# Source: resc/charts/resc-vcs-scraper-projects/templates/vcs_scraper_projects_configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: resc-vcs-scraper-projects-config
  namespace: resc
  labels:
    app: resc
data:
  
  DEBUG_MODE: "0"
  
  
  VCS_INSTANCES_FILE_PATH: "/tmp/vcs_instances_config.json"
---
# Source: resc/charts/resc-vcs-scraper-repositories/templates/vcs_scraper_repositories_configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: resc-vcs-scraper-repositories-config
  namespace: resc
  labels:
    app: resc
data:
  
  DEBUG_MODE: "0"
  
  
  VCS_INSTANCES_FILE_PATH: "/tmp/vcs_instances_config.json"
---
# Source: resc/charts/resc-web-service-no-auth/templates/web_service_no_auth_configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: resc-web-service-config-no-auth
  namespace: resc
  labels:
    app: resc
data:
  
  RESC_REDIS_CACHE_ENABLE: "true"
  
  
  AUTHENTICATION_REQUIRED: "false"
  
  
  MSSQL_SCHEMA: master
  
  
  ENABLE_CORS: "false"
  
  
  SSO_ACCESS_TOKEN_ISSUER_URL: notApplicable
  
  
  SSO_ACCESS_TOKEN_JWKS_URL: notApplicable
  
  
  SSO_JWT_SIGN_ALGORITHM: notApplicable
  
  
  SSO_JWT_REQUIRED_CLAIMS: notApplicable
  
  
  
  SSO_JWT_CLAIM_KEY_AUTHORIZATION: notApplicable
  
  
  SSO_JWT_CLAIM_VALUE_AUTHORIZATION: notApplicable
  
  
  CORS_ALLOWED_DOMAINS: notApplicable
  
  
  MSSQL_DB_PORT: "1433"
  
  
  MSSQL_USERNAME: sa
  
  
  MSSQL_ODBC_DRIVER: ODBC Driver 18 for SQL Server
  
  
  
  MSSQL_DSN: rescdb
  
  odbc.ini: |
    [rescdb]    
    Driver = ODBC Driver 18 for SQL Server
    Server = tcp:,1433    
    Authentication = ActiveDirectoryMsi
---
# Source: resc/charts/resc-web-service/templates/web_service_configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: resc-web-service-config
  namespace: resc
  labels:
    app: resc
data:
  
  RESC_REDIS_CACHE_ENABLE: "true"
  
  
  AUTHENTICATION_REQUIRED: "false"
  
  
  MSSQL_SCHEMA: master
  
  
  ENABLE_CORS: "true"
  
  
  SSO_ACCESS_TOKEN_ISSUER_URL: https://vm00000617.nl.eu.abnamro.com:9032
  
  
  SSO_ACCESS_TOKEN_JWKS_URL: https://security-ifs-test.connect.abnamro.com:9031/ext/employeeoidc/jwks
  
  
  
  
  
  
  
  CORS_ALLOWED_DOMAINS: http://localhost:8080, http://localhost:30000
  
  
  MSSQL_DB_PORT: "1433"
  
  
  MSSQL_USERNAME: sa
  
  
  MSSQL_ODBC_DRIVER: ODBC Driver 18 for SQL Server
  
  
  
  MSSQL_DSN: rescdb
  
  odbc.ini: |
    [rescdb]    
    Driver = ODBC Driver 18 for SQL Server
    Server = tcp:,1433    
    Authentication = ActiveDirectoryMsi
---
# Source: resc/charts/resc-database/templates/database_persistent_volume.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: resc-database-pv-volume
  namespace: resc
  annotations:
    pv.beta.kubernetes.io/gid: "999"
  labels:
    type: local
spec:
  storageClassName: resc-sql-storage
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  
  hostPath:
    path: /Users/amrityamrout/resc1/resc-db-storage
---
# Source: resc/charts/resc-rabbitmq/templates/rabbitmq_persistent_volume.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: resc-mq-pv-volume
  namespace: resc
  annotations:
    pv.beta.kubernetes.io/gid: "999"
  labels:
    type: local
spec:
  storageClassName: resc-mq-storage
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  
  
  hostPath:
    path: /Users/amrityamrout/resc1/resc-rabbitmq-storage
---
# Source: resc/charts/resc-database/templates/database_persistent_volume_claim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: resc-database-pv-volume-claim
  namespace: resc
spec:
  storageClassName: resc-sql-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
# Source: resc/charts/resc-rabbitmq/templates/rabbitmq_persistent_volume_claim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: resc-mq-pv-volume-claim
  namespace: resc
spec:
  storageClassName: resc-mq-storage
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
# Source: resc/charts/resc-database/templates/database_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: resc-ms-database
  namespace: resc
  labels:
    app: resc
    tier: ms-database
  annotations:
    datree.skip/SERVICE_INCORRECT_TYPE_VALUE_NODEPORT: irrelevant as its only exposed for local environment and can be enabled/disabled from env specific values.yaml
spec:
  
  type: NodePort
  
  ports:
    - port: 1433
      targetPort: 1433
      
      nodePort: 30880
      
  selector:
    app: resc
    tier: ms-database
---
# Source: resc/charts/resc-frontend/templates/frontend_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: resc-frontend
  namespace: resc
  labels:
    app: resc
    tier: frontend
  annotations:
    datree.skip/SERVICE_INCORRECT_TYPE_VALUE_NODEPORT: irrelevant as frontend needs to be exposed outside of the cluster
spec:
  
  type: NodePort
  
  ports:
    - port: 8080
      targetPort: 8080
      
      nodePort: 30000
      
  selector:
    app: resc
    tier: frontend
---
# Source: resc/charts/resc-rabbitmq/templates/rabbitmq_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: resc-rabbitmq
  namespace: resc
  labels:
    app: resc
    tier: rabbitmq
  annotations:
    datree.skip/SERVICE_INCORRECT_TYPE_VALUE_NODEPORT: irrelevant as its only exposed for local environment and can be enabled/disabled from env specific values.yaml
spec:
  
  type: NodePort
  
  ports:
    - port: 5672
      targetPort: 5672
      name: amqp
      
      nodePort: 30902
      
    - port: 15672
      targetPort: 15672
      name: mgmt
      
      nodePort: 30901
      
  selector:
    app: resc
    tier: rabbitmq
---
# Source: resc/charts/resc-redis/templates/redis_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: resc-redis
  namespace: resc
  labels:
    app: resc
    tier: redis
  annotations:
    datree.skip/SERVICE_INCORRECT_TYPE_VALUE_NODEPORT: irrelevant as its only exposed for local environment and can be enabled/disabled from env specific values.yaml
spec:
  
  type: NodePort
  
  ports:
    - port: 6379
      targetPort: 6379
      name: redis
      
      nodePort: 32379
      
  selector:
    app: resc
    tier: redis
---
# Source: resc/charts/resc-web-service-no-auth/templates/web_service_no_auth_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: resc-api-no-auth
  namespace: resc
  labels:
    app: resc
    tier: api-no-auth
  annotations:
    datree.skip/SERVICE_INCORRECT_TYPE_VALUE_NODEPORT: irrelevant as its only exposed for local environment and can be enabled/disabled from env specific values.yaml
spec:
  
  type: NodePort
  
  ports:
    - port: 8000
      targetPort: 8000
      
      nodePort: 30900
      
  selector:
    app: resc
    tier: api-no-auth
---
# Source: resc/charts/resc-web-service/templates/web_service_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: resc-api
  namespace: resc
  labels:
    app: resc
    tier: api
  annotations:
    datree.skip/SERVICE_INCORRECT_TYPE_VALUE_NODEPORT: irrelevant as its only exposed for local environment and can be enabled/disabled from env specific values.yaml
spec:
  
  type: NodePort
  
  ports:
    - port: 8000
      targetPort: 8000
      
      nodePort: 30800
      
  selector:
    app: resc
    tier: api
---
# Source: resc/charts/resc-database/templates/database_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: resc-db
  namespace: resc
spec:
  selector:
    matchLabels:
      app: resc
      tier: ms-database
  replicas: 1
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/resc-db: unconfined
      labels:
        app: resc
        tier: ms-database
        kubeaudit.io/allow-disabled-apparmor: "apparmor-needs-to-be-installed-on-host"
        kubeaudit.io/allow-capability-net-bind-service: "required-by-sqlserver-to-bind-the-default-MSDTC-RPC-on-port-135"
        kubeaudit.io/allow-read-only-root-filesystem-false: "required-to-write-database-files"
    spec:
      volumes:
        - name: resc-database-pv-storage
          persistentVolumeClaim:
            claimName: resc-database-pv-volume-claim
      containers:
        - name: resc-db
          image: mcr.microsoft.com/azure-sql-edge:1.0.7
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 200m
              memory: 500M
            limits:
              cpu: 2
              memory: 2G
          env:
            - name: GET_HOSTS_FROM
              value: dns
          envFrom:
            - configMapRef:
                name: resc-database-config
            - secretRef:
                name: resc-database-secret
          volumeMounts:
            - mountPath: "/var/opt/mssql/data"
              name: resc-database-pv-storage
          ports:
            - containerPort: 1433
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            privileged: false
            capabilities:
              drop:
                - ALL
              add:
              - NET_BIND_SERVICE
            runAsNonRoot: true
            runAsUser: 10001
            seccompProfile:
              type: RuntimeDefault
          livenessProbe:
            tcpSocket:
              port: 1433
            initialDelaySeconds: 20
            periodSeconds: 60
            timeoutSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 1433
            initialDelaySeconds: 20
            periodSeconds: 60
            timeoutSeconds: 10
      automountServiceAccountToken: false
---
# Source: resc/charts/resc-frontend/templates/frontend_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: resc-frontend
  namespace: resc
  annotations:
    datree.skip/CONTAINERS_INCORRECT_RUNASUSER_VALUE_LOWUID: irrelevant for nginx docker image, skipping.
spec:
  replicas: 1
  selector:
    matchLabels:
      app: resc
      tier: frontend
  template:
    metadata:
      annotations:
        rollme: "B9um9"
        container.apparmor.security.beta.kubernetes.io/resc-frontend: unconfined
      labels:
        app: resc
        tier: frontend
        kubeaudit.io/allow-disabled-apparmor: "apparmor-needs-to-be-installed-on-host"
        kubeaudit.io/allow-read-only-root-filesystem-false: "required-to-write-log-files"
    spec:
      containers:
        - name: resc-frontend
          image: p-nexus-3.development.nl.eu.abnamro.com:18443/resc/resc-frontend:1.4.0
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 100m
              memory: 100M
            limits:
              cpu: 100m
              memory: 100M
          env:
            - name: GET_HOSTS_FROM
              value: dns
          envFrom:
            - configMapRef:
                name: resc-frontend-config
          ports:
            - containerPort: 8080
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            privileged: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
            runAsNonRoot: true
            runAsUser: 101
          livenessProbe:
            httpGet:
              port: 8080
              path: /login
            initialDelaySeconds: 20
            periodSeconds: 60
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              port: 8080
              path: /healthz
            initialDelaySeconds: 20
            periodSeconds: 60
            timeoutSeconds: 10
      
      automountServiceAccountToken: false
---
# Source: resc/charts/resc-redis/templates/redis_deployement.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: resc-redis
  namespace: resc
spec:
  selector:
    matchLabels:
      app: resc
      tier: redis
  replicas: 1
  template:
    metadata:
      labels:
        
        app: resc
        tier: redis
      annotations:
        rollme: "pPLet"
    spec:
      
      containers:
      - name: resc-redis
        image: redis:7.0.11-alpine
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c"]
        args: [" redis-server /redis-master/redis.conf --requirepass \"$REDIS_PASSWORD\""]
        env:
          - name: MASTER
            value: "true"
        envFrom:
          
          - secretRef:
              name: resc-redis-secret
          
        ports:
        - containerPort: 6379
        resources:
          requests:
              cpu: 250m
              memory: 256Mi
          limits:
            cpu: 250m
            memory: 256Mi
        volumeMounts:
        - mountPath: /redis-master-data
          name: data
        - mountPath: /redis-master
          name: config
        readinessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 20
          periodSeconds: 60
          timeoutSeconds: 10
        livenessProbe:
          exec:
            command:
              - sh
              - -c
              - "output=$(redis-cli -p $RESC_REDIS_SERVICE_PORT -a $REDIS_PASSWORD ping); if [ \"$output\" = \"PONG\" ]; then exit 0; else exit 1; fi"
          initialDelaySeconds: 20
          periodSeconds: 60
          timeoutSeconds: 10
      volumes:
        - name: data
          emptyDir: {}
        - name: config
          configMap:
            name: resc-redis-config
            items:
            - key: redis-config
              path: redis.conf
---
# Source: resc/charts/resc-vcs-scanner-secrets/templates/vcs_scanner_secrets_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: resc-vcs-scanner-secrets
  namespace: resc
spec:
  replicas: 1
  selector:
    matchLabels:
      tier: resc-vcs-scanner-secrets
  template:
    metadata:
      labels:
        
        tier: resc-vcs-scanner-secrets
        kubeaudit.io/allow-disabled-apparmor: "apparmor-needs-to-be-installed-on-host"
        kubeaudit.io/allow-read-only-root-filesystem-false: "required-to-write-log-files"
      annotations:
        rollme: "WDDj0"
        container.apparmor.security.beta.kubernetes.io/resc--vcs-scanner-secrets: unconfined
    spec:
      
      containers:
      - name: resc--vcs-scanner-secrets
        image: p-nexus-3.development.nl.eu.abnamro.com:18443/resc/resc-vcs-scanner:1.4.0
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c"]
        args: [" celery  -A  vcs_scanner.secret_scanners.celery_worker worker --loglevel=INFO -E -Q repositories --concurrency=1  --prefetch-multiplier=1"]
        resources:
          requests:
            cpu: 300m
            memory: 300M
          limits:
            cpu: 750m
            memory: 750M
        envFrom:
          - configMapRef:
              name: resc-vcs-scanner-secrets-config
          - configMapRef:
              name: resc-rabbitmq-config
          
          - secretRef:
              name: resc-vcs-instances-secret
          - secretRef:
              name: resc-rabbitmq-user-secret
          
        volumeMounts:
            - name: config-volume
              mountPath: /tmp/vcs_instances_config.json
              subPath: vcs_instances_config.json
        env:
          - name: GET_HOSTS_FROM
            value: dns
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          privileged: false
          capabilities:
            drop:
              - ALL
          seccompProfile:
              type: RuntimeDefault
          runAsNonRoot: true
          runAsUser: 10001
        readinessProbe:
          exec:
            command:
              - sh
              - -c
              - celery -A vcs_scanner.secret_scanners.celery_worker inspect ping -d celery@$HOSTNAME | grep -q "pong" && exit 0 || exit 1
          initialDelaySeconds: 30
          periodSeconds: 60
          timeoutSeconds: 120
        livenessProbe:
          exec:
            command:
              - sh
              - -c
              - celery -A vcs_scanner.secret_scanners.celery_worker inspect ping -d celery@$HOSTNAME | grep -q "pong" && exit 0 || exit 1
          initialDelaySeconds: 60
          periodSeconds: 60
          timeoutSeconds: 120
      volumes:
        - name: config-volume
          configMap:
            name: resc-vcs-instances-config
      restartPolicy: Always
      
      
      automountServiceAccountToken: false
---
# Source: resc/charts/resc-vcs-scraper-repositories/templates/vcs_scraper_repositories_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: resc-vcs-scraper-repositories
  namespace: resc
spec:
  selector:
    matchLabels:
      app: resc
      tier: vcs-scraper-repositories
  replicas: 1
  template:
    metadata:
      labels:
        
        app: resc
        tier: vcs-scraper-repositories
        kubeaudit.io/allow-disabled-apparmor: "apparmor-needs-to-be-installed-on-host"
        kubeaudit.io/allow-read-only-root-filesystem-false: "required-to-write-log-files"
      annotations:
        rollme: "Q1sL2"
        container.apparmor.security.beta.kubernetes.io/resc--vcs-scraper-repositories: unconfined
    spec:
      
      containers:
      - name: resc--vcs-scraper-repositories
        image: p-nexus-3.development.nl.eu.abnamro.com:18443/resc/resc-vcs-scraper:1.4.0
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c"]
        args: [ " celery -A vcs_scraper.repository_collector.common worker --loglevel=INFO -E -Q projects"]
        resources:
          requests:
            cpu: 300m
            memory: 300M
          limits:
            cpu: 750m
            memory: 750M
        envFrom:
          - configMapRef:
              name: resc-vcs-scraper-repositories-config
          - configMapRef:
              name: resc-rabbitmq-config
          
          - secretRef:
              name: resc-vcs-instances-secret
          - secretRef:
              name: resc-rabbitmq-user-secret
          
        volumeMounts:
          - name: config-volume
            mountPath: /tmp/vcs_instances_config.json
            subPath: vcs_instances_config.json
        env:
          - name: GET_HOSTS_FROM
            value: dns
        securityContext:
          
          allowPrivilegeEscalation: false
          
          readOnlyRootFilesystem: false
          privileged: false
          capabilities:
            drop:
              - ALL
          seccompProfile:
              type: RuntimeDefault
          runAsNonRoot: true
          runAsUser: 10001
        readinessProbe:
          exec:
            command:
              - sh
              - -c
              - celery -A vcs_scraper.repository_collector.common inspect ping -d celery@$HOSTNAME | grep -q "pong" && exit 0 || exit 1
          initialDelaySeconds: 60
          periodSeconds: 60
          timeoutSeconds: 120
        livenessProbe:
          exec:
            command:
              - sh
              - -c
              - celery -A vcs_scraper.repository_collector.common inspect ping -d celery@$HOSTNAME | grep -q "pong" && exit 0 || exit 1
          initialDelaySeconds: 60
          periodSeconds: 60
          timeoutSeconds: 120
      volumes:
        - name: config-volume
          configMap:
            name: resc-vcs-instances-config
      restartPolicy: Always
      
      
      automountServiceAccountToken: false
---
# Source: resc/charts/resc-web-service-no-auth/templates/web_service_no_auth_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: resc-web-service-no-auth
  namespace: resc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: resc
      tier: api-no-auth
  template:
    metadata:
      annotations:
        rollme: "7Il4y"
        container.apparmor.security.beta.kubernetes.io/resc-api: unconfined
      labels:
        
        app: resc
        tier: api-no-auth
        kubeaudit.io/allow-disabled-apparmor: "apparmor-needs-to-be-installed-on-host"
        kubeaudit.io/allow-read-only-root-filesystem-false: "required-to-write-log-files"
    spec:
      
      containers:
        - name: resc-api
          image: p-nexus-3.development.nl.eu.abnamro.com:18443/resc/resc-backend:1.4.0
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c"]
          args: ["export MSSQL_DB_HOST=$RESC_MS_DATABASE_SERVICE_HOST; cp /tmp/odbc.ini ~/.odbc.ini; uvicorn resc_backend.resc_web_service.api:app --workers 1 --host 0.0.0.0 --port 8000"]
          resources:
            requests:
              cpu: 400m
              memory: 400M
            limits:
              cpu: 750m
              memory: 1G
          env:
            - name: GET_HOSTS_FROM
              value: dns
          envFrom:
            - configMapRef:
                name: resc-web-service-config-no-auth
            - secretRef:
                name: resc-web-service-secret
          ports:
            - containerPort: 8000
          volumeMounts:
            - name: config-volume
              mountPath: /tmp/odbc.ini
              subPath: odbc.ini
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            privileged: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
            runAsNonRoot: true
            runAsUser: 10001
          livenessProbe:
            httpGet:
              path: /resc/v1/health
              port: 8000
            initialDelaySeconds: 20
            periodSeconds: 300
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /resc/v1/health
              port: 8000
            initialDelaySeconds: 20
            periodSeconds: 300
            timeoutSeconds: 10
      volumes:
        - name: config-volume
          configMap:
            name: resc-web-service-config-no-auth
      
      
      automountServiceAccountToken: false
---
# Source: resc/charts/resc-web-service/templates/web_service_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: resc-web-service
  namespace: resc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: resc
      tier: api
  template:
    metadata:
      annotations:
        rollme: "Jq9D1"
        container.apparmor.security.beta.kubernetes.io/resc-api: unconfined
      labels:
        
        app: resc
        tier: api
        kubeaudit.io/allow-disabled-apparmor: "apparmor-needs-to-be-installed-on-host"
        kubeaudit.io/allow-read-only-root-filesystem-false: "required-to-write-log-files"
    spec:
      
      containers:
        - name: resc-api
          image: p-nexus-3.development.nl.eu.abnamro.com:18443/resc/resc-backend:1.4.0
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c"]
          args: ["export MSSQL_DB_HOST=$RESC_MS_DATABASE_SERVICE_HOST; cp /tmp/odbc.ini ~/.odbc.ini; uvicorn resc_backend.resc_web_service.api:app --workers 1 --host 0.0.0.0 --port 8000"]
          resources:
            requests:
              cpu: 400m
              memory: 400M
            limits:
              cpu: 750m
              memory: 1G
          env:
            - name: GET_HOSTS_FROM
              value: dns
          envFrom:
            - configMapRef:
                name: resc-web-service-config
            - secretRef:
                name: resc-web-service-secret
          ports:
            - containerPort: 8000
          volumeMounts:
            - name: config-volume
              mountPath: /tmp/odbc.ini
              subPath: odbc.ini
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            privileged: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
            runAsNonRoot: true
            runAsUser: 10001
          livenessProbe:
            httpGet:
              path: /resc/v1/health
              port: 8000
            initialDelaySeconds: 20
            periodSeconds: 300
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /resc/v1/health
              port: 8000
            initialDelaySeconds: 20
            periodSeconds: 300
            timeoutSeconds: 10
      volumes:
        - name: config-volume
          configMap:
            name: resc-web-service-config
      
      
      automountServiceAccountToken: false
---
# Source: resc/charts/resc-rabbitmq/templates/rabbitmq_statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: resc-mq
  namespace: resc
spec:
  serviceName: "rabbitmq"
  selector:
    matchLabels:
      app: resc
      tier: rabbitmq
  replicas: 1
  template:
    metadata:
      labels:
        
        app: resc
        tier: rabbitmq
        kubeaudit.io/allow-disabled-apparmor: "apparmor-needs-to-be-installed-on-host"
        kubeaudit.io/allow-read-only-root-filesystem-false: "required-to-write-log-files"
        kubeaudit.io/allow-capability-setgid: "required-by-raabitmq-to-set-group-identitys"
        kubeaudit.io/allow-capability-setuid: "required-by-raabitmq-to-set-user-identity"
      annotations:
        rollme: "gg1pt"
        container.apparmor.security.beta.kubernetes.io/resc-mq: unconfined
    spec:
      
      volumes:
        - name: resc-rabbitmq-config-volume
          configMap:
            name: resc-rabbitmq-config
        - name: resc-mq-pv-storage
          persistentVolumeClaim:
            claimName: resc-mq-pv-volume-claim
        
      containers:
        - name: resc-mq
          image: rabbitmq:3.11.9-management-alpine
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c"]
          args: [" docker-entrypoint.sh rabbitmq-server"]
          resources:
            requests:
              cpu: 400m
              memory: 750M
            limits:
              cpu: 500m
              memory: 900M
          env:
            - name: GET_HOSTS_FROM
              value: dns
          envFrom:
            - configMapRef:
                name: resc-rabbitmq-config
            
            - secretRef:
                name: resc-rabbitmq-admin-secret
            
          ports:
            - containerPort: 5672
          volumeMounts:
            - name: resc-rabbitmq-config-volume
              mountPath: /etc/rabbitmq/rabbitmq.conf
              subPath: rabbitmq.conf
            - mountPath: "/var/lib/rabbitmq/mnesia"
              subPath: "var/lib/rabbitmq/mnesia"
              name: resc-mq-pv-storage
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            privileged: false
            capabilities:
              drop:
                - ALL
              add:
              - SETGID
              - SETUID
            seccompProfile:
              type: RuntimeDefault
            runAsNonRoot: true
            runAsUser: 10001
          livenessProbe:
            exec:
              command: [ "rabbitmq-diagnostics", "status" ]
            initialDelaySeconds: 60
            periodSeconds: 60
            timeoutSeconds: 15
          readinessProbe:
            exec:
              command: [ "rabbitmq-diagnostics", "ping" ]
            initialDelaySeconds: 20
            periodSeconds: 60
            timeoutSeconds: 10
      
      
      automountServiceAccountToken: false
---
# Source: resc/charts/resc-database-init/templates/database_job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: resc-db-init
  namespace: resc
  annotations:
    datree.skip/CONTAINERS_MISSING_LIVENESSPROBE_KEY: irrelevant for this short lived container, skipping.
    datree.skip/CONTAINERS_MISSING_READINESSPROBE_KEY: irrelevant for this short lived container, skipping.
spec:
  ttlSecondsAfterFinished: 600
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/resc-db-init: unconfined
      labels:
        
        app: resc
        tier: database
        kubeaudit.io/allow-disabled-apparmor: "apparmor-needs-to-be-installed-on-host"
        kubeaudit.io/allow-read-only-root-filesystem-false: "required-to-write-log-files"
    spec:
      
      containers:
        - name: resc-db-init
          image: p-nexus-3.development.nl.eu.abnamro.com:18443/resc/resc-backend:1.4.0
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c"]
          args: [ "export MSSQL_DB_HOST=$RESC_MS_DATABASE_SERVICE_HOST; cp /tmp/odbc.ini ~/.odbc.ini; alembic upgrade head "]
          resources:
            requests:
              cpu: 100m
              memory: 100M
            limits:
              cpu: 300m
              memory: 500M
          envFrom:
            - configMapRef:
                name: resc-database-init-config
            - secretRef:
                name: resc-database-init-secret
          volumeMounts:
            - name: config-volume
              mountPath: /tmp/odbc.ini
              subPath: odbc.ini
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            privileged: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
            runAsNonRoot: true
            runAsUser: 10001
      volumes:
        - name: config-volume
          configMap:
            name: resc-database-init-config
      restartPolicy: OnFailure
      
      automountServiceAccountToken: false
  backoffLimit: 10
---
# Source: resc/charts/resc-rabbitmq/templates/rabbitmq_job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: resc-mq-init
  namespace: resc
  annotations:
    datree.skip/CONTAINERS_MISSING_LIVENESSPROBE_KEY: irrelevant for this short lived container, skipping.
    datree.skip/CONTAINERS_MISSING_READINESSPROBE_KEY: irrelevant for this short lived container, skipping.
spec:
  ttlSecondsAfterFinished: 600
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/resc-mq-init: unconfined
      labels:
        
        kubeaudit.io/allow-disabled-apparmor: "apparmor-needs-to-be-installed-on-host"
        kubeaudit.io/allow-read-only-root-filesystem-false: "required-to-write-log-files"
    spec:
      
      containers:
        - name: resc-mq-init
          image: p-nexus-3.development.nl.eu.abnamro.com:18443/resc/resc-backend:1.4.0
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c"]
          args: [" resc_initialize_rabbitmq_users"]
          resources:
            requests:
              cpu: 100m
              memory: 100M
            limits:
              cpu: 200m
              memory: 200M
          envFrom:
            - configMapRef:
                name: resc-rabbitmq-config
            
            - secretRef:
                name: resc-rabbitmq-user-secret
            - secretRef:
                name: resc-rabbitmq-admin-secret
            

          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            privileged: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
            runAsNonRoot: true
            runAsUser: 10001
      
      restartPolicy: OnFailure
      
      
      automountServiceAccountToken: false
      
  backoffLimit: 10
---
# Source: resc/charts/resc-vcs-scraper-projects/templates/vcs_scraper_projects_cron_job.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: resc-vcs-scraper-projects
  namespace: resc
  annotations:
    datree.skip/CONTAINERS_MISSING_LIVENESSPROBE_KEY: irrelevant for this short lived container, skipping.
    datree.skip/CONTAINERS_MISSING_READINESSPROBE_KEY: irrelevant for this short lived container, skipping.
spec:
  suspend: false
  schedule: "0 6 * * 6"
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 100
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            
            kubeaudit.io/allow-disabled-apparmor: "apparmor-needs-to-be-installed-on-host"
            kubeaudit.io/allow-read-only-root-filesystem-false: "required-to-write-log-files"
          annotations:
        spec:
          
          containers:
          - name: resc-vcs-scraper-projects
            image: p-nexus-3.development.nl.eu.abnamro.com:18443/resc/resc-vcs-scraper:1.4.0
            imagePullPolicy: IfNotPresent
            command: ["sh", "-c"]
            args: [ " collect_projects"]
            resources:
              requests:
                cpu: 300m
                memory: 300M
              limits:
                cpu: 500m
                memory: 500M
            envFrom:
              - configMapRef:
                  name: resc-vcs-scraper-projects-config
              - configMapRef:
                  name: resc-rabbitmq-config
              
              - secretRef:
                  name: resc-vcs-instances-secret
              - secretRef:
                  name: resc-rabbitmq-user-secret
              
            volumeMounts:
              - name: config-volume
                mountPath: /tmp/vcs_instances_config.json
                subPath: vcs_instances_config.json
            env:
              - name: GET_HOSTS_FROM
                value: dns
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              privileged: false
              capabilities:
                drop:
                  - ALL
              seccompProfile:
                  type: RuntimeDefault
              runAsNonRoot: true
              runAsUser: 10001
          volumes:
            - name: config-volume
              configMap:
                name: resc-vcs-instances-config
          restartPolicy: Never
          
      backoffLimit: 3
---
# Source: resc/charts/resc-rules-init/templates/rules_job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: resc-rules-init
  namespace: resc
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    datree.skip/CONTAINERS_MISSING_LIVENESSPROBE_KEY: irrelevant for this short lived container, skipping.
    datree.skip/CONTAINERS_MISSING_READINESSPROBE_KEY: irrelevant for this short lived container, skipping.
spec:
  ttlSecondsAfterFinished: 600
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/resc-rules-init: unconfined
      labels:
        app: resc
        tier: database
        kubeaudit.io/allow-disabled-apparmor: "apparmor-needs-to-be-installed-on-host"
        kubeaudit.io/allow-read-only-root-filesystem-false: "required-to-write-log-files"
    spec:
      
      containers:
        - name: resc-rules-init
          image: p-nexus-3.development.nl.eu.abnamro.com:18443/resc/resc-backend:1.4.0
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c"]
          args: [ "cat /tmp/RESC-SECRETS-RULE.toml | base64 -d > /resc_backend/RESC-SECRETS-RULE.toml; curl --retry 5 --retry-delay 1 -F 'rule_file=@/resc_backend/RESC-SECRETS-RULE.toml' http://$RESC_API_NO_AUTH_SERVICE_HOST:$RESC_API_SERVICE_PORT/resc/v1/rule-packs?version=$RULE_PACK_VERSION"]
          resources:
            requests:
              cpu: 100m
              memory: 100M
            limits:
              cpu: 300m
              memory: 500M
          envFrom:
            - configMapRef:
                name: resc-rules-config
          volumeMounts:
            - name: config-volume
              mountPath: /tmp/
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            privileged: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
            runAsNonRoot: true
            runAsUser: 10001
      volumes:
        - name: config-volume
          configMap:
            name: resc-rules-config
      restartPolicy: OnFailure
      
      
      automountServiceAccountToken: false
      
  backoffLimit: 10
