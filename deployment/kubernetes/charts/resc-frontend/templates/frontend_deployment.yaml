apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.global.appName }}-frontend
  namespace: {{ .Values.global.namespace }}
spec:
  replicas: {{ .Values.replicas}}
  selector:
    matchLabels:
      app: {{ .Values.global.appName }}
      tier: frontend
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
        container.apparmor.security.beta.kubernetes.io/resc-frontend: unconfined
      labels:
        app: {{ .Values.global.appName }}
        tier: frontend
        kubeaudit.io/allow-disabled-apparmor: "apparmor-needs-to-be-installed-on-host"
        kubeaudit.io/allow-read-only-root-filesystem-false: "required-to-write-log-files"
    spec:
      containers:
        - name: {{ .Values.global.appName }}-frontend
          image: {{ .Values.rescFrontend.image.repository | default .Values.global.rescFrontend.image.repository }}{{ .Values.rescFrontend.image.name | default .Values.global.rescFrontend.image.name }}:{{ .Values.rescFrontend.image.tag | default .Values.global.rescFrontend.image.tag }}
          imagePullPolicy: {{ .Values.rescFrontend.image.pullPolicy | default .Values.global.rescFrontend.image.pullPolicy }}
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
          env:
            - name: GET_HOSTS_FROM
              value: dns
          envFrom:
            - configMapRef:
                name: {{ .Values.global.appName }}-frontend-config
          ports:
            - containerPort: {{ .Values.port }}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            privileged: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
            runAsNonRoot: true
            runAsUser: 101
      {{ if .Values.global.imagePullSecret }}
      imagePullSecrets:
        - name: {{ .Values.global.imagePullSecret }}
      {{ end }}
      automountServiceAccountToken: false