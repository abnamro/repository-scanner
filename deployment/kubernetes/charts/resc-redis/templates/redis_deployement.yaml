apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.global.appName }}-redis
  namespace: {{ .Values.global.namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.global.appName }}
      tier: redis
  replicas: 1
  template:
    metadata:
      labels:
        {{ if .Values.additionalLabels }}
        {{- range $key, $val := .Values.additionalLabels }}
        {{ $key }}: {{ $val | quote }}
        {{- end}}
        {{ end }}
        app: {{ .Values.global.appName }}
        tier: redis
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
        {{- with include "resc.redisAnnotations" .}}
          {{- nindent 8 .}}
        {{- end }}
    spec:
      {{ if .Values.global.serviceAccountName }}
      serviceAccountName: {{ .Values.global.serviceAccountName }}
      {{ end }}
      containers:
      - name: {{ .Values.global.appName }}-redis
        image: {{ .Values.redis.image.name }}:{{ .Values.redis.image.tag }}
        imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
        command: ["sh", "-c"]
        args: ["{{ .Values.preStartUpCommand }} redis-server /redis-master/redis.conf --requirepass \"$REDIS_PASSWORD\""]
        env:
          - name: MASTER
            value: "true"
        envFrom:
          {{ if eq .Values.useKubernetesSecret "true" }}
          - secretRef:
              name: {{ .Values.global.appName }}-redis-secret
          {{ end }}
        ports:
        - containerPort: {{ .Values.redis.config.port}}
        resources:
          requests:
              cpu: {{ .Values.redis.resources.requests.cpu }}
              memory: {{ .Values.redis.resources.requests.memory }}
          limits:
            cpu: {{ .Values.redis.resources.limits.cpu }}
            memory: {{ .Values.redis.resources.limits.memory }}
        volumeMounts:
        - mountPath: /redis-master-data
          name: data
        - mountPath: /redis-master
          name: config
        {{- $additionalVolumeMounts := include "resc.redisAdditionalVolumeMounts" . }}
        {{- if $additionalVolumeMounts }}
        {{- with include "resc.redisAdditionalVolumeMounts" .}}
          {{- nindent 8 .}}
        {{- end }}
        {{- end }}
        readinessProbe:
          tcpSocket:
            port: {{ .Values.redis.config.port }}
          initialDelaySeconds: 20
          periodSeconds: 60
          timeoutSeconds: 10
        livenessProbe:
          exec:
            command:
              - sh
              - -c
              - "{{ .Values.preStartUpCommand }} output=$(redis-cli -p $RESC_REDIS_SERVICE_PORT -a $REDIS_PASSWORD ping); if [ \"$output\" = \"PONG\" ]; then exit 0; else exit 1; fi"
          initialDelaySeconds: 20
          periodSeconds: 60
          timeoutSeconds: 10
      volumes:
        - name: data
          emptyDir: {}
        - name: config
          configMap:
            name: {{ .Values.global.appName }}-redis-config
            items:
            - key: redis-config
              path: redis.conf
        {{- $additionalVolumes := include "resc.redisAdditionalVolumes" . }}
        {{- if $additionalVolumes }}
        {{- with include "resc.redisAdditionalVolumes" .}}
          {{- nindent 8 .}}
        {{- end }}
        {{- end }}